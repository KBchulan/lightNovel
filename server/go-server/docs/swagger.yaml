basePath: /api/v1
definitions:
  models.Bookmark:
    properties:
      chapterNumber:
        type: integer
      createdAt:
        type: string
      deviceId:
        type: string
      id:
        type: string
      note:
        type: string
      novelId:
        type: string
      position:
        type: integer
      updatedAt:
        type: string
      volumeNumber:
        type: integer
    type: object
  models.Chapter:
    properties:
      chapterNumber:
        type: integer
      content:
        type: string
      createdAt:
        type: string
      hasImages:
        type: boolean
      id:
        type: string
      imageCount:
        type: integer
      imagePath:
        type: string
      novelId:
        type: string
      title:
        type: string
      updatedAt:
        type: string
      volumeNumber:
        type: integer
    type: object
  models.ChapterInfo:
    properties:
      chapterNumber:
        type: integer
      createdAt:
        type: string
      id:
        type: string
      novelId:
        type: string
      title:
        type: string
      updatedAt:
        type: string
      volumeNumber:
        type: integer
    type: object
  models.CurrentProgress:
    properties:
      chapterNumber:
        type: integer
      lastReadAt:
        type: string
      position:
        type: integer
      volumeNumber:
        type: integer
    type: object
  models.Novel:
    properties:
      author:
        type: string
      cover:
        type: string
      createdAt:
        type: string
      description:
        type: string
      id:
        type: string
      readCount:
        description: 阅读量
        type: integer
      status:
        description: 连载中、已完结
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
      updatedAt:
        type: string
      volumeCount:
        type: integer
    type: object
  models.ReadChapterRecord:
    properties:
      chapterNumber:
        type: integer
      deviceId:
        type: string
      firstReadAt:
        type: string
      id:
        type: string
      isComplete:
        type: boolean
      lastPosition:
        type: integer
      lastReadAt:
        type: string
      novelId:
        type: string
      readCount:
        type: integer
      volumeNumber:
        type: integer
    type: object
  models.ReadRecord:
    properties:
      chapterNumber:
        type: integer
      deviceId:
        type: string
      endPosition:
        type: integer
      id:
        type: string
      isComplete:
        type: boolean
      novelId:
        type: string
      readAt:
        type: string
      readDuration:
        type: integer
      source:
        type: string
      startPosition:
        type: integer
      volumeNumber:
        type: integer
    type: object
  models.ReadingProgress:
    properties:
      createdAt:
        type: string
      currentProgress:
        $ref: '#/definitions/models.CurrentProgress'
      deviceId:
        type: string
      id:
        type: string
      novelId:
        type: string
      updatedAt:
        type: string
    type: object
  models.ReadingStat:
    properties:
      chapterRead:
        type: integer
      completeCount:
        type: integer
      createdAt:
        type: string
      deviceId:
        type: string
      id:
        type: string
      lastActiveDate:
        type: string
      novelId:
        type: string
      readDays:
        items:
          type: string
        type: array
      readProgress:
        type: number
      totalChapters:
        type: integer
      totalReadTime:
        type: integer
      updatedAt:
        type: string
    type: object
  models.Volume:
    properties:
      chapterCount:
        type: integer
      createdAt:
        type: string
      id:
        type: string
      novelId:
        type: string
      updatedAt:
        type: string
      volumeNumber:
        type: integer
    type: object
  response.PageResponse:
    properties:
      data: {}
      hasNext:
        type: boolean
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  response.Response:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  v1.AddReadRecordRequest:
    properties:
      chapterNumber:
        minimum: 1
        type: integer
      endPosition:
        minimum: 0
        type: integer
      isComplete:
        type: boolean
      novelId:
        type: string
      readDuration:
        minimum: 1
        type: integer
      source:
        enum:
        - web
        - app
        - other
        type: string
      startPosition:
        minimum: 0
        type: integer
      volumeNumber:
        minimum: 1
        type: integer
    required:
    - chapterNumber
    - novelId
    - readDuration
    - source
    - volumeNumber
    type: object
  v1.CreateBookmarkRequest:
    properties:
      chapterNumber:
        type: integer
      note:
        type: string
      novelId:
        type: string
      position:
        type: integer
      volumeNumber:
        type: integer
    required:
    - chapterNumber
    - novelId
    - volumeNumber
    type: object
  v1.HealthResponse:
    properties:
      status:
        type: string
      timestamp:
        type: string
      uptime:
        type: string
    type: object
  v1.MetricsResponse:
    properties:
      goroutines:
        type: integer
      memory:
        properties:
          alloc:
            type: integer
          numGC:
            type: integer
          sys:
            type: integer
          totalAlloc:
            type: integer
        type: object
      uptime:
        type: string
    type: object
  v1.UpdateBookmarkRequest:
    properties:
      note:
        type: string
    type: object
  v1.UpdateProgressRequest:
    properties:
      chapterNumber:
        type: integer
      novelId:
        type: string
      position:
        type: integer
      volumeNumber:
        type: integer
    required:
    - chapterNumber
    - novelId
    - volumeNumber
    type: object
info:
  contact: {}
  description: 轻小说阅读API服务
  title: Light Novel API
  version: "1.0"
paths:
  /api/v1/health:
    get:
      consumes:
      - application/json
      description: 获取系统运行状态，包括启动时间、运行时长等信息
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/v1.HealthResponse'
              type: object
      summary: 获取系统健康状态
      tags:
      - system
  /api/v1/metrics:
    get:
      consumes:
      - application/json
      description: 获取系统详细的性能指标，包括内存使用、goroutine数量等
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/v1.MetricsResponse'
              type: object
      summary: 获取系统性能指标
      tags:
      - system
  /api/v1/ws:
    get:
      consumes:
      - application/json
      description: 建立WebSocket连接以接收实时更新通知
      parameters:
      - description: 设备ID，如果未提供则使用客户端IP
        in: header
        name: X-Device-ID
        type: string
      produces:
      - application/json
      responses:
        "101":
          description: Switching Protocols
          schema:
            type: string
        "400":
          description: 无效的请求
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: WebSocket连接
      tags:
      - websocket
  /api/v1/ws/status:
    get:
      consumes:
      - application/json
      description: 获取当前WebSocket连接的状态信息
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 获取WebSocket状态
      tags:
      - websocket
  /novels:
    get:
      consumes:
      - application/json
      description: 获取小说列表，支持分页
      parameters:
      - default: 1
        description: 页码
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        maximum: 50
        minimum: 1
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.PageResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Novel'
                  type: array
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 获取所有小说
      tags:
      - novels
  /novels/{id}:
    get:
      consumes:
      - application/json
      description: 根据ID获取小说详情
      parameters:
      - description: 小说ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/models.Novel'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: 小说不存在
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 获取小说详情
      tags:
      - novels
  /novels/{id}/volumes:
    get:
      consumes:
      - application/json
      description: 获取指定小说的所有卷列表
      parameters:
      - description: 小说ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Volume'
                  type: array
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: 小说不存在
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 获取小说卷列表
      tags:
      - novels
  /novels/{id}/volumes/{volume}/chapters:
    get:
      consumes:
      - application/json
      description: 获取指定卷的所有章节基本信息（不包含内容）
      parameters:
      - description: 小说ID
        in: path
        name: id
        required: true
        type: string
      - description: 卷号
        in: path
        name: volume
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ChapterInfo'
            type: array
      summary: 获取卷的所有章节
      tags:
      - novels
  /novels/{id}/volumes/{volume}/chapters/{chapter}:
    get:
      consumes:
      - application/json
      description: 获取指定章节的详细内容，包含文本内容和图片信息
      parameters:
      - description: 小说ID
        in: path
        name: id
        required: true
        type: string
      - description: 卷号
        in: path
        name: volume
        required: true
        type: integer
      - description: 章节号
        in: path
        name: chapter
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 章节内容模型
          schema:
            allOf:
            - $ref: '#/definitions/models.Chapter'
            - properties:
                hasImages:
                  type: boolean
                imageCount:
                  type: integer
                imagePath:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: 章节不存在
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 获取章节内容
      tags:
      - novels
  /novels/latest:
    get:
      consumes:
      - application/json
      description: 获取最新更新的小说列表
      parameters:
      - default: 10
        description: 限制数量
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Novel'
                  type: array
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 获取最新小说
      tags:
      - novels
  /novels/popular:
    get:
      consumes:
      - application/json
      description: 获取阅读量最高的小说列表
      parameters:
      - default: 10
        description: 限制数量
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Novel'
                  type: array
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 获取热门小说
      tags:
      - novels
  /novels/search:
    get:
      consumes:
      - application/json
      description: 根据关键词搜索小说
      parameters:
      - description: 搜索关键词
        in: query
        name: keyword
        required: true
        type: string
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      summary: 搜索小说
      tags:
      - novels
  /user/bookmarks:
    get:
      consumes:
      - application/json
      description: 获取用户的所有书签
      parameters:
      - description: 设备ID，如果未提供则使用客户端IP
        in: header
        name: X-Device-ID
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Bookmark'
                  type: array
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取用户书签
      tags:
      - bookmarks
    post:
      consumes:
      - application/json
      description: 在指定章节创建书签
      parameters:
      - description: 设备ID，如果未提供则使用客户端IP
        in: header
        name: X-Device-ID
        type: string
      - description: 书签信息
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/v1.CreateBookmarkRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Bookmark'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: 小说或章节不存在
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 创建书签
      tags:
      - bookmarks
  /user/bookmarks/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的书签
      parameters:
      - description: 设备ID，如果未提供则使用客户端IP
        in: header
        name: X-Device-ID
        type: string
      - description: 书签ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: 书签不存在
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除书签
      tags:
      - bookmarks
    put:
      consumes:
      - application/json
      description: 更新书签信息（如备注）
      parameters:
      - description: 设备ID，如果未提供则使用客户端IP
        in: header
        name: X-Device-ID
        type: string
      - description: 书签ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新信息
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/v1.UpdateBookmarkRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Bookmark'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: 书签不存在
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新书签
      tags:
      - bookmarks
  /user/favorites:
    get:
      consumes:
      - application/json
      description: 获取用户收藏的小说列表
      parameters:
      - description: 设备ID
        in: header
        name: X-Device-ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Novel'
                  type: array
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取用户收藏列表
      tags:
      - favorites
  /user/favorites/{novel_id}:
    delete:
      consumes:
      - application/json
      description: 从收藏列表中移除小说
      parameters:
      - description: 设备ID
        in: header
        name: X-Device-ID
        required: true
        type: string
      - description: 小说ID
        in: path
        name: novel_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 取消收藏
      tags:
      - favorites
    post:
      consumes:
      - application/json
      description: 添加小说到收藏列表
      parameters:
      - description: 设备ID
        in: header
        name: X-Device-ID
        required: true
        type: string
      - description: 小说ID
        in: path
        name: novel_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 添加收藏
      tags:
      - favorites
  /user/favorites/{novel_id}/check:
    get:
      consumes:
      - application/json
      description: 检查小说是否已收藏
      parameters:
      - description: 设备ID
        in: header
        name: X-Device-ID
        required: true
        type: string
      - description: 小说ID
        in: path
        name: novel_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties:
                    type: boolean
                  type: object
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 检查是否已收藏
      tags:
      - favorites
  /user/history:
    get:
      consumes:
      - application/json
      description: 获取用户的阅读历史记录
      parameters:
      - description: 设备ID，如果未提供则使用客户端IP
        in: header
        name: X-Device-ID
        type: string
      - default: 10
        description: 限制数量
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.ReadingProgress'
                  type: array
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取阅读历史
      tags:
      - user
  /user/progress:
    patch:
      consumes:
      - application/json
      description: 更新用户的小说阅读进度
      parameters:
      - description: 设备ID，如果未提供则使用客户端IP
        in: header
        name: X-Device-ID
        type: string
      - description: 阅读进度信息
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/v1.UpdateProgressRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: 小说不存在
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新阅读进度
      tags:
      - user
  /user/reading/chapters/{novel-id}:
    get:
      consumes:
      - application/json
      description: 获取指定小说的已读章节列表
      parameters:
      - description: 设备ID
        in: header
        name: X-Device-ID
        required: true
        type: string
      - description: 小说ID
        in: path
        name: novel-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.ReadChapterRecord'
                  type: array
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 获取已读章节列表
      tags:
      - reading
  /user/reading/records:
    post:
      consumes:
      - application/json
      description: 添加一条阅读记录，同时更新阅读统计和已读章节记录
      parameters:
      - description: 设备ID
        in: header
        name: X-Device-ID
        required: true
        type: string
      - description: 阅读记录信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.AddReadRecordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 添加阅读记录
      tags:
      - reading
  /user/reading/records/{novel-id}:
    get:
      consumes:
      - application/json
      description: 获取用户的阅读记录
      parameters:
      - description: 设备ID
        in: header
        name: X-Device-ID
        required: true
        type: string
      - description: 小说ID
        in: path
        name: novel-id
        required: true
        type: string
      - description: 页码，默认1
        in: query
        name: page
        type: integer
      - description: 每页数量，默认20
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.ReadRecord'
                  type: array
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 获取阅读记录
      tags:
      - reading
  /user/reading/records/{novel-id}/{record-id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的阅读记录
      parameters:
      - description: 设备ID
        in: header
        name: X-Device-ID
        required: true
        type: string
      - description: 小说ID
        in: path
        name: novel-id
        required: true
        type: string
      - description: 记录ID
        in: path
        name: record-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: 记录不存在
          schema:
            $ref: '#/definitions/response.Response'
      summary: 删除阅读记录
      tags:
      - reading
  /user/reading/stats:
    get:
      consumes:
      - application/json
      description: 获取用户的所有阅读统计列表
      parameters:
      - description: 设备ID
        in: header
        name: X-Device-ID
        required: true
        type: string
      - description: 页码，默认1
        in: query
        name: page
        type: integer
      - description: 每页数量，默认20
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.ReadingStat'
                  type: array
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 获取阅读统计列表
      tags:
      - reading
  /user/reading/stats/{novel-id}:
    get:
      consumes:
      - application/json
      description: 获取指定小说的阅读统计信息
      parameters:
      - description: 设备ID
        in: header
        name: X-Device-ID
        required: true
        type: string
      - description: 小说ID
        in: path
        name: novel-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.ReadingStat'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: 统计不存在
          schema:
            $ref: '#/definitions/response.Response'
      summary: 获取阅读统计
      tags:
      - reading
swagger: "2.0"
